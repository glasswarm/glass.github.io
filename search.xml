<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于QT在linux_arm64上的安装</title>
      <link href="/2024/03/06/QT/2%E5%85%B3%E4%BA%8EQT%20for%20linux%E4%B8%8Elinux%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91%E7%9A%84%E5%AE%89%E8%A3%85/linux%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91/"/>
      <url>/2024/03/06/QT/2%E5%85%B3%E4%BA%8EQT%20for%20linux%E4%B8%8Elinux%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91%E7%9A%84%E5%AE%89%E8%A3%85/linux%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于QT在linux_amd64_x86-64上的安装</title>
      <link href="/2024/03/06/QT/2%E5%85%B3%E4%BA%8EQT%20for%20linux%E4%B8%8Elinux%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2024/03/06/QT/2%E5%85%B3%E4%BA%8EQT%20for%20linux%E4%B8%8Elinux%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="QT官方-镜像的下载地址"><a href="#QT官方-镜像的下载地址" class="headerlink" title="QT官方&#x2F;镜像的下载地址"></a>QT官方&#x2F;镜像的下载地址</h1><h2 id="官网下载地址-下载速度非常慢，需要魔法"><a href="#官网下载地址-下载速度非常慢，需要魔法" class="headerlink" title="官网下载地址(下载速度非常慢，需要魔法)"></a>官网下载地址(下载速度非常慢，需要魔法)</h2><ul><li>官网:<a href="https://download.qt.io/">https://download.qt.io/</a></li></ul><h2 id="国内镜像下载地址-已经全部失效"><a href="#国内镜像下载地址-已经全部失效" class="headerlink" title="国内镜像下载地址(已经全部失效)"></a>国内镜像下载地址(已经全部失效)</h2><ul><li>中国科学技术大学：<a href="http://mirrors.ustc.edu.cn/qtproject/">http://mirrors.ustc.edu.cn/qtproject/</a></li></ul><ul><li>清华大学：<a href="https://mirrors.tuna.tsinghua.edu.cn/qt/">https://mirrors.tuna.tsinghua.edu.cn/qt/</a></li></ul><ul><li>北京理工大学：<a href="http://mirror.bit.edu.cn/qtproject/">http://mirror.bit.edu.cn/qtproject/</a></li></ul><ul><li>中国互联网络信息中心：<a href="https://mirrors.cnnic.cn/qt/">https://mirrors.cnnic.cn/qt/</a></li></ul><h2 id="页面下载-下载速度非常慢，需要魔法，且需要桌面显示，对linux云服务器不利"><a href="#页面下载-下载速度非常慢，需要魔法，且需要桌面显示，对linux云服务器不利" class="headerlink" title="页面下载(下载速度非常慢，需要魔法，且需要桌面显示，对linux云服务器不利)"></a>页面下载(下载速度非常慢，需要魔法，且需要桌面显示，对linux云服务器不利)</h2><blockquote><p><strong>选择该页面的archive&#x2F;qt&#x2F;5.12&#x2F;5.12.x&#x2F;single&#x2F;qt-everywhere-src-5.12.8.tar.xz，并下载，推荐5.12.8版本</strong></p></blockquote><h2 id="百度网盘下载地址"><a href="#百度网盘下载地址" class="headerlink" title="百度网盘下载地址"></a>百度网盘下载地址</h2><ul><li><strong>包含：QT5.12.8 linux源码，QT5.12.8 Windows开源长期维护版本，linux源码，在线下载器6.4.1,安卓SDK&#x2F;NDK和JAVA SDK</strong></li><li>链接：<a href="https://pan.baidu.com/s/1Jo4G82WE-E6BGU2oc7Ql7g?pwd=1234">https://pan.baidu.com/s/1Jo4G82WE-E6BGU2oc7Ql7g?pwd=1234</a> </li><li>提取码：1234</li></ul><h1 id="QT5-12-8-linux源码安装"><a href="#QT5-12-8-linux源码安装" class="headerlink" title="QT5.12.8_linux源码安装"></a>QT5.12.8_linux源码安装</h1><h2 id="bypy下载-可选"><a href="#bypy下载-可选" class="headerlink" title="bypy下载(可选)"></a>bypy下载(可选)</h2><ul><li><strong><font size="4">bypy可以绑定百度网盘，并可以在百度网盘上下载程序</font></strong></li></ul><blockquote><p><strong><font size="4">安装bypy</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install bypy</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">输入下列代码，并根据提示绑定百度网盘，等待一段时间</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bypy info</span><br></pre></td></tr></table></figure><p><strong><font size="4">绑定成功后会出现如&lt;图一&gt;</font></strong></p></blockquote><p><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/1.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图一"></p><blockquote><p><strong><font size="4"></font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bypy downfile xxx <span class="comment">#下载单个文件</span></span><br><span class="line">bypy downdir  xxx <span class="comment">#下载单个文件夹</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="QT5-12-8安装"><a href="#QT5-12-8安装" class="headerlink" title="QT5.12.8安装"></a>QT5.12.8安装</h2><ul><li><strong><font size="4">依赖安装</font></strong><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libxcb-xfixes0-dev libxcb-util-dev</span><br><span class="line">sudo apt-get install libxcb-xinerama0</span><br><span class="line">sudo apt-get install build-essential libgl1-mesa-dev</span><br></pre></td></tr></table></figure></blockquote></li></ul><ul><li><strong><font size="4">下载qt-everywhere-src-5.12.8.tar.xz，自选放置路径，如&#x2F;opt&#x2F;qt5.12.8&#x2F;内部。</font></strong></li><li><strong><font size="4">解压缩</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -xvf qt-everywhere-src-5.12.8.tar.xz</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">终端进入QT源码文件夹，输入下指令，跳过一些不必要的模块(根据自己的需求)</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure -prefix /opt/qt5.12.8/qt5.12.8 -release -opensource -skip qtwayland -skip qtlocation -skip qtscript -skip qt3d -skip qtcanvas3d -skip datavis3d -skip qt virtualkeyboard -platform linux-g++</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">configure参数解析</font></strong><br><strong><font size="4">CSDN(粗略) <a href="https://blog.csdn.net/qq_37654240/article/details/109639331">https://blog.csdn.net/qq_37654240/article/details/109639331</a></font></strong><br><strong><font size="4">博客(较深) <a href="https://www.cnblogs.com/findumars/p/6254629.html">https://www.cnblogs.com/findumars/p/6254629.html</a></font></strong><br><strong><font size="4">-opensource表示使用开源版本，-confirm-license表示确认许可，-prefix表示安装路径</font></strong></p></blockquote></li></ul><ul><li><p><strong><font size="4">以下文件夹均可当参数跳过，例如-skip qt3d </font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/4.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图四"></p></li><li><p><strong><font size="4">等待一段时间，之后输入下列指令</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j4 <span class="comment">#表示使用4个线程进行编译，可以根据自己的cpu核心数进行调整</span></span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">并等待2小时+</font></strong></p></blockquote></li></ul><ul><li><strong><font size="4">安装编译好的QT</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install </span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong><font size="4">修正,报错&#x2F;usr&#x2F;bin&#x2F;ld.gold: error: cannot find -lclip2tri 或者 &#x2F;usr&#x2F;bin&#x2F;ld.gold: error: cannot find -lpoly2tri 或者 &#x2F;usr&#x2F;bin&#x2F;ld.gold: error: cannot find -lclipper,这主要是因为qtlocation模块依赖这个，我们-sikp qtlocation，即可跳过该报错</font></strong><br><strong><font size="4"></font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure -prefix /opt/qt/qt5.12.8 -release -opensource -confirm-license -skip qtwayland -skip qtlocation -skip qtscript -skip qt3d -skip qtcanvas3d -skip datavis3d -skip qtvirtualkeyboard -xcb-xlib -qt-xcb</span><br></pre></td></tr></table></figure><p><strong><font size="4">出现报错 not find python，但是其实已经下载了python，如&lt;图二&gt;</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/2.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图二"><br><strong><font size="4">是因为没有建立映射关系,输入如下指令</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/bin/python3 /usr/bin/python </span><br><span class="line">ls -l /usr/bin/python*</span><br></pre></td></tr></table></figure><p><strong><font size="4">发现，已经有python的映射了&lt;图三&gt;</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/3.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图三"><br><strong><font size="4">报错 C++: fatal error: Killed signal terminated program cc1plus compilation terminated.</font></strong><br><strong><font size="4">是虚拟机内存不足造成的。通过创建swap分区解决了这个问题</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建分区路径</span></span><br><span class="line">sudo <span class="built_in">mkdir</span> -p /var/cache/swap/</span><br><span class="line"><span class="comment"># 设置分区的大小</span></span><br><span class="line"><span class="comment"># bs=64M是块大小，count=64是块数量，所以swap空间大小是bs*count=4096MB=4GB</span></span><br><span class="line">sudo <span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=/var/cache/swap/swap0 bs=64M count=64</span><br><span class="line"><span class="comment"># 设置该目录权限</span></span><br><span class="line">sudo <span class="built_in">chmod</span> 0600 /var/cache/swap/swap0</span><br><span class="line"><span class="comment"># 创建SWAP文件</span></span><br><span class="line">sudo mkswap /var/cache/swap/swap0</span><br><span class="line"><span class="comment"># 激活SWAP文件</span></span><br><span class="line">sudo swapon /var/cache/swap/swap0</span><br><span class="line"><span class="comment"># 查看SWAP信息是否正确</span></span><br><span class="line">sudo swapon -s</span><br></pre></td></tr></table></figure><p><strong><font size="4">删除交换分区的命令</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo swapoff /var/cache/swap/swap0</span><br><span class="line">sudo <span class="built_in">rm</span> /var/cache/swap/swap0</span><br></pre></td></tr></table></figure><p><strong><font size="4">释放空间命令</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo swapoff -a</span><br><span class="line">#详细的用法：swapoff --help</span><br><span class="line">#查看当前内存使用情况：free -m</span><br></pre></td></tr></table></figure></blockquote><ul><li><strong><font size="4">安装成功，没有任何error，图五</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/5.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图五"></li></ul><ul><li><strong><font size="4">将安装成功的qt添加至环境变量</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">将下列代码添加至profile文件中</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> QTDIR=/opt/qt-5.12.5-install(你的qt安装目录)</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$QTDIR</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> MANPATH=<span class="variable">$QTDIR</span>/man:<span class="variable">$MANPATH</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$QTDIR</span>/lib:<span class="variable">$LD_LIBRARY_PATH</span></span><br></pre></td></tr></table></figure><p><strong><font size="4">然后退出，并输入如下代码,声明环境变量</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></blockquote></li></ul><ul><li><strong><font size="4">检验qt是否安装成功，输入</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qmake -v</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">输出图六，成功~</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/6.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图六"></p></blockquote></li></ul><h2 id="如果想看详细的输出问题"><a href="#如果想看详细的输出问题" class="headerlink" title="如果想看详细的输出问题"></a>如果想看详细的输出问题</h2><ul><li><strong><font size="4">打开环境变量配置文件</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim ~/.bashrc</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">末尾添加如下代码</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export QT_DEBUG_PLUGINS=1</span><br></pre></td></tr></table></figure></blockquote></li></ul><ul><li><strong><font size="4">启动环境变量</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li></ul><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><ul><li><strong><font size="4">如果想查看代码行数</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Get-ChildItem -Recurse -File | Get-Content | Measure-Object -Line).Lines</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于QT的一些备忘录</title>
      <link href="/2023/12/11/%E5%A4%87%E5%BF%98%E5%BD%95/QT/%E6%A7%BD%E4%BF%A1%E5%8F%B7%E7%9A%84%E5%87%BD%E6%95%B0%E9%85%8D%E7%BD%AE/QT%E5%A4%87%E5%BF%98%E5%BD%95/"/>
      <url>/2023/12/11/%E5%A4%87%E5%BF%98%E5%BD%95/QT/%E6%A7%BD%E4%BF%A1%E5%8F%B7%E7%9A%84%E5%87%BD%E6%95%B0%E9%85%8D%E7%BD%AE/QT%E5%A4%87%E5%BF%98%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="槽函数"><a href="#槽函数" class="headerlink" title="槽函数"></a>槽函数</h1><ul><li><strong><font size="4">槽函数的创建</font></strong></li></ul><p><img src="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/%E6%A7%BD%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%9B%E5%BB%BA.png" class="lazyload placeholder" data-srcset="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/%E6%A7%BD%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%9B%E5%BB%BA.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="槽函数的创建"></p><ul><li><strong><font size="4">修改UI文件名称，需要修改.ui内的对象名称</font></strong><br><img src="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/%E4%BF%AE%E6%94%B9UI%E7%9A%84%E5%90%8D%E7%A7%B0.png" class="lazyload placeholder" data-srcset="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/%E4%BF%AE%E6%94%B9UI%E7%9A%84%E5%90%8D%E7%A7%B0.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="修改对象名称"></li></ul><ul><li><strong><font size="4">修改UI窗体名称</font></strong><br><img src="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/UI%E7%AA%97%E5%8F%A3%E5%90%8D%E7%A7%B0%E7%9A%84%E4%BF%AE%E6%94%B9.png" class="lazyload placeholder" data-srcset="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/UI%E7%AA%97%E5%8F%A3%E5%90%8D%E7%A7%B0%E7%9A%84%E4%BF%AE%E6%94%B9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="修改UI窗体名称"></li></ul><ul><li><strong><font size="4">关于unknow type name……报错，取消ClangCodeModel即可消失，但无法解决</font></strong></li></ul><ul><li><strong><font size="4">graphicsView组件在使用时,想使用QtCharts，得先提升为QtChartsview类</font></strong><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/备忘录/QT/QT备忘录/使用graphicsView组件为Qchart时,需要提升为QChartView1.png" class="lazyload placeholder" data-srcset="/picture/备忘录/QT/QT备忘录/使用graphicsView组件为Qchart时,需要提升为QChartView1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图" style="height:400px;"/></div><span class="image-caption">图</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/备忘录/QT/QT备忘录/使用graphicsView组件为Qchart时,需要提升为QChartView2.png" class="lazyload placeholder" data-srcset="/picture/备忘录/QT/QT备忘录/使用graphicsView组件为Qchart时,需要提升为QChartView2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图" style="height:400px;"/></div><span class="image-caption">图</span></div>             </div></li><li><strong><font size="4">char数据储显示负数时，%d是其char存储的二进制数除去符号位的反码+1,例如字符’255’，在char中是1111 1111，其%d值为-1，抛去符号位1，反码+1，得到1000 0001 即为-1</font></strong></li></ul><ul><li><p><strong><font size="4">qt想要在其他cpp调用别的类的ui可以，先将接口传入</font></strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TCP_Client::<span class="built_in">TCP_Client</span>(QWidget *parent) :</span><br><span class="line">            <span class="built_in">QMainWindow</span>(parent)         ,</span><br><span class="line">            <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::TCP_Client)<span class="comment">//即这个参数，Ui::TCP_Client</span></span><br><span class="line">&#123;</span><br><span class="line">    ui -&gt;<span class="built_in">setupUi</span> (<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">此时我们使用,这个类顶一个全局的*ui0，使ui0 &#x3D;ui,再放入.h文件进入声明</font></strong></p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.cpp</span><br><span class="line">Ui::TCP_Client *ui0;<span class="comment">//记住Ui::xxx是个类的名称</span></span><br><span class="line">TCP_Client::<span class="built_in">TCP_Client</span>(QWidget *parent) :</span><br><span class="line">            <span class="built_in">QMainWindow</span>(parent)         ,</span><br><span class="line">            <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::TCP_Client)</span><br><span class="line">&#123;</span><br><span class="line">    ui0 = ui;</span><br><span class="line">    ui0 -&gt; <span class="built_in">setupUi</span>(<span class="keyword">this</span>);<span class="comment">//记住使用ui0的文件要包含&quot;ui_xxxxx.h头文件&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.h</span><br><span class="line"><span class="keyword">extern</span> Ui::TCP_Client *ui0;</span><br></pre></td></tr></table></figure></li><li><p><strong><font size="4">在.h的class里面定义如下，带上了别的类TCP_Client *Client;</font></strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.h</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TCP_Client</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Timer_set</span> : <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">Timer_set</span><span class="params">(TCP_Client *Client)</span></span>;</span><br><span class="line">    ~<span class="built_in">Timer_set</span>();</span><br><span class="line"></span><br><span class="line">    TCP_Client *Client;<span class="comment">//------</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">则可以</font></strong></p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.cpp</span><br><span class="line"><span class="comment">//(TCP_Client *Client)是形参不用变,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Client(Client),第二个Client是传入的参数(只能在类里面选)，第一个Client是该文件，传入的参数之后用什么用变量名(相当于起名字)</span></span><br><span class="line">Timer_set::<span class="built_in">Timer_set</span>(TCP_Client *Client):<span class="built_in">Client</span>(Client)</span><br><span class="line">&#123;</span><br><span class="line">    Timer_set::<span class="built_in">timer_setup</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong><font size="4">Widget控件在使用时，会作为父类，会影响内部的子类入label，设置背景图片时需要在ui的styleSheet写入</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">类<span class="comment">#控件名</span></span><br><span class="line">&#123;</span><br><span class="line">border-image:url(C:/Users/glass/Desktop/sundry/picture/qq/QQ_Head/ccc.jpg);</span><br><span class="line"><span class="comment">#例如</span></span><br><span class="line">QWidget<span class="comment">#select</span></span><br><span class="line">&#123;</span><br><span class="line">border-image:url(C:/Users/glass/Desktop/sundry/picture/qq/QQ_Head/ccc.jpg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/QT%E7%9A%84UI%E7%88%B6%E7%B1%BB%E5%AF%B9%E5%AD%90%E7%B1%BB%E7%9A%84%E5%BD%B1%E5%93%8D.png" class="lazyload placeholder" data-srcset="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/QT%E7%9A%84UI%E7%88%B6%E7%B1%BB%E5%AF%B9%E5%AD%90%E7%B1%BB%E7%9A%84%E5%BD%B1%E5%93%8D.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="修改UI窗体名称"></p></li><li><p><strong><font size="4">QT在调用相对路径时，要先创建.qrc文件,然后右键open with -&gt; 资源编辑器，Add Files,将所有文件加入进去</font></strong></p></li></ul><blockquote><p><strong><font size="4">相对路径是:&#x2F;(资源的文件夹)&#x2F;(资源文件),且使用前需要先加入.qrc文件内,而.&#x2F;(资源的文件夹)&#x2F;(资源文件)是生成的debug&#x2F;release文件内部</font></strong></p></blockquote><ul><li><strong><font size="4">想要去边框可以直接在ui内删除bar组件，例如menubar</font></strong></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 给自己看的备忘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>合宙esp32-c3神奇的一些点</title>
      <link href="/2023/12/07/ESP32/%E5%90%88%E5%AE%99esp32-c3/%E5%90%88%E5%AE%99esp32-c3%E7%A5%9E%E5%A5%87%E7%9A%84%E4%B8%80%E4%BA%9B%E7%82%B9/"/>
      <url>/2023/12/07/ESP32/%E5%90%88%E5%AE%99esp32-c3/%E5%90%88%E5%AE%99esp32-c3%E7%A5%9E%E5%A5%87%E7%9A%84%E4%B8%80%E4%BA%9B%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<ul><li><strong><font size="4">经典款的c3带ch343芯片，而简约款的c3不带ch343芯片，并且UART0发送的数据不会传入上位机，但是usb转ttl功能正常</font></strong></li></ul><ul><li><strong><font size="4">cdc是USB虚拟串口，MUX是IO矩阵</font></strong></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esp-idf中examples内softAP例程的main.c移植为components组件，编译提示找不到esp_wifi.h报错</title>
      <link href="/2023/12/06/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/"/>
      <url>/2023/12/06/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h1 id="esp-idf提示找不到esp-wifi-h报错"><a href="#esp-idf提示找不到esp-wifi-h报错" class="headerlink" title="esp-idf提示找不到esp_wifi.h报错"></a>esp-idf提示找不到esp_wifi.h报错</h1><h2 id="报错如下"><a href="#报错如下" class="headerlink" title="报错如下"></a>报错如下</h2><p><img src="/picture/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/1.png" class="lazyload placeholder" data-srcset="/picture/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="报错如图"></p><ul><li><p><strong><font size="4">将你的user_components组件内的CMakelists.txt由原来的</font></strong><br><img src="/picture/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/2.png" class="lazyload placeholder" data-srcset="/picture/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="原来的代码"></p></li><li><p><strong><font size="4">增加(<span class='p warning'>PRIV_REQUIRES</span>&#x2F;<span class='p warning'>REQUIRES</span>) + 你的组件名，组件名在(<span class='p warning'>EDP-IDF安装路径/components/组件名</span>)</font></strong><br><img src="/picture/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/3.png" class="lazyload placeholder" data-srcset="/picture/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="修改后的代码"></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esp-idf项目添加.c.h文件的三种方法</title>
      <link href="/2023/12/05/ESP32/esp-idf%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0.c.h%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/esp-idf%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0.c.h%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
      <url>/2023/12/05/ESP32/esp-idf%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0.c.h%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/esp-idf%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0.c.h%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="esp-idf项目添加-c-h文件的三种方法"><a href="#esp-idf项目添加-c-h文件的三种方法" class="headerlink" title="esp-idf项目添加.c.h文件的三种方法"></a>esp-idf项目添加.c.h文件的三种方法</h1><h2 id="第一种方法-直接在main文件夹里添加"><a href="#第一种方法-直接在main文件夹里添加" class="headerlink" title="第一种方法,直接在main文件夹里添加"></a>第一种方法,直接在main文件夹里添加</h2><ul><li><strong><font size="4">例如,原本目录这样</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- user_project/ - CMakelists.txt</span><br><span class="line">                - sdkconfig</span><br><span class="line">                - main/ - app_main.c</span><br><span class="line">                        - Kconfig.projbuild</span><br><span class="line">                        - CMakelists.txt</span><br><span class="line">                - build/</span><br></pre></td></tr></table></figure></li><li><strong><font size="4">我们添加一个test.c.h，则</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- user_project/ - CMakelists.txt</span><br><span class="line">                - sdkconfig</span><br><span class="line">                - main/ - app_main.c</span><br><span class="line">                        - Kconfig.projbuild</span><br><span class="line">                        - test.c</span><br><span class="line">                        - CMakelists.txt </span><br><span class="line">                        - test/ - test.h</span><br><span class="line">                - build/</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">并在main&#x2F;文件夹下的<span class='p warning'>CMakelists.txt</span>由原来的</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">idf_component_register(SRCS <span class="string">&quot;tcp_server.c&quot;</span> </span><br><span class="line">                    INCLUDE_DIRS <span class="string">&quot;.&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><strong><font size="4">变为</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">idf_component_register(SRCS <span class="string">&quot;tcp_server.c&quot;</span></span><br><span class="line">                            <span class="string">&quot;test.c&quot;</span></span><br><span class="line">                    INCLUDE_DIRS <span class="string">&quot;.&quot;</span> </span><br><span class="line">                                 <span class="string">&quot;./test&quot;</span>) </span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong><font size="4">这样的添加方式不利于代码的管理，所以我们常用第二种添加方法</font></strong></p></blockquote><h2 id="第二种方法-通过创建components文件夹，添加-c-h文件"><a href="#第二种方法-通过创建components文件夹，添加-c-h文件" class="headerlink" title="第二种方法,通过创建components文件夹，添加.c.h文件"></a>第二种方法,通过创建components文件夹，添加.c.h文件</h2><ul><li><strong><font size="4">原本的目录</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- user_project/ - CMakelists.txt</span><br><span class="line">                - sdkconfig</span><br><span class="line">                - main/ - app_main.c</span><br><span class="line">                        - Kconfig.projbuild</span><br><span class="line">                        - CMakelists.txt</span><br><span class="line">                - build/</span><br></pre></td></tr></table></figure></li><li><strong><font size="4">我们创建<span class='p warning'>components</span>文件夹 添加test1.c.h和test2.c.h则</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- user_project/ - CMakelists.txt</span><br><span class="line">                - sdkconfig</span><br><span class="line">                - main/ - app_main.c</span><br><span class="line">                        - Kconfig.projbuild</span><br><span class="line">                - build/                 </span><br><span class="line">                - components/ - test/ - test1.c</span><br><span class="line">                                      - test2.c</span><br><span class="line">                                      - CMakelists.txt </span><br><span class="line">                                      - include/ - test1.h</span><br><span class="line">                                                 - test2.h</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">之后我们向<span class='p warning'>test/</span>下的Cmakelists.txt写入</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">idf_component_register(SRCS <span class="string">&quot;test1.c&quot;</span></span><br><span class="line">                            <span class="string">&quot;test2.c&quot;</span></span><br><span class="line">                    INCLUDE_DIRS <span class="string">&quot;.&quot;</span></span><br><span class="line">                                 <span class="string">&quot;./include&quot;</span> )</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong><font size="4">推荐使用这样的方式来添加.c.h文件</font></strong></p></blockquote><h2 id="第三种方法-通过添加-EXTRA-COMPONENT-DIRS-路径，添加-c-h文件"><a href="#第三种方法-通过添加-EXTRA-COMPONENT-DIRS-路径，添加-c-h文件" class="headerlink" title="第三种方法,通过添加 EXTRA_COMPONENT_DIRS 路径，添加.c.h文件"></a>第三种方法,通过添加 EXTRA_COMPONENT_DIRS 路径，添加.c.h文件</h2><ul><li><strong><font size="4">原本的目录</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- user_project/ - CMakelists.txt</span><br><span class="line">                - sdkconfig</span><br><span class="line">                - main/ - app_main.c</span><br><span class="line">                        - Kconfig.projbuild</span><br><span class="line">                        - CMakelists.txt</span><br><span class="line">                - build/</span><br></pre></td></tr></table></figure></li><li><strong><font size="4">我们先创建类似components目录机构的文件夹，例如叫2023文件夹</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- user_project/ - CMakelists.txt</span><br><span class="line">                - sdkconfig</span><br><span class="line">                - main/ - app_main.c</span><br><span class="line">                        - Kconfig.projbuild</span><br><span class="line">                - build/                 </span><br><span class="line">                - 2023/ - test/ - test1.c</span><br><span class="line">                                - test2.c</span><br><span class="line">                                - CMakelists.txt </span><br><span class="line">                                - include/ - test1.h</span><br><span class="line">                                - test2.h</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="5"><span class='p red'>2023/test/目录下的CMakelists.txt要和方法二中test下的CMakelists.txt内容一致</span></font></strong></p></blockquote></li></ul><ul><li><strong><font size="4">然后打开<span class='p warning'>user_project</span>文件夹下的CMakelists.txt</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The following five lines of boilerplate have to be in your project&#x27;s</span></span><br><span class="line"><span class="comment"># CMakeLists in this exact order for cmake to work correctly</span></span><br><span class="line">cmake_minimum_required(VERSION 3.16)</span><br><span class="line"></span><br><span class="line"><span class="comment"># (Not part of the boilerplate)</span></span><br><span class="line"><span class="comment"># This example uses an extra component for common functions such as Wi-Fi and Ethernet connection.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>(EXTRA_COMPONENT_DIRS <span class="variable">$ENV</span>&#123;IDF_PATH&#125;/examples/common_components/protocol_examples_common)</span><br><span class="line"></span><br><span class="line">include(<span class="variable">$ENV</span>&#123;IDF_PATH&#125;/tools/cmake/project.cmake)</span><br><span class="line">project(tcp_server)</span><br></pre></td></tr></table></figure></li><li><strong><font size="4">将set()部分改为</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The following five lines of boilerplate have to be in your project&#x27;s</span></span><br><span class="line"><span class="comment"># CMakeLists in this exact order for cmake to work correctly</span></span><br><span class="line">cmake_minimum_required(VERSION 3.16)</span><br><span class="line"></span><br><span class="line"><span class="comment"># (Not part of the boilerplate)</span></span><br><span class="line"><span class="comment"># This example uses an extra component for common functions such as Wi-Fi and Ethernet connection.</span></span><br><span class="line"><span class="built_in">set</span>(EXTRA_COMPONENT_DIRS </span><br><span class="line"><span class="variable">$ENV</span>&#123;IDF_PATH&#125;/examples/common_components/protocol_examples_common</span><br><span class="line"><span class="string">&quot;./2023&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">include(<span class="variable">$ENV</span>&#123;IDF_PATH&#125;/tools/cmake/project.cmake)</span><br><span class="line">project(tcp_server)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong><font size="4">再次使用idf.py fullclean build即可正常编译</font></strong></p></blockquote><h2 id="完"><a href="#完" class="headerlink" title="完"></a>完</h2>]]></content>
      
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esp-idf常用指令</title>
      <link href="/2023/12/04/ESP32/esp-idf%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/esp-idf%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
      <url>/2023/12/04/ESP32/esp-idf%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/esp-idf%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong><font size="4">idf新建工程</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py create-project &lt;project-name&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">清除之前的编译结果</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py fullclean</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">打开串口监视器</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py -p COMx monitor</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">向串口烧录固件</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py -p COMx flash</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">项目编译</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py build</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">配置菜单</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py menuconfig</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">选择esp32芯片型号</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py set-target esp32</span><br></pre></td></tr></table></figure><p><strong><font size="4">不输入参数的话，会列出所有可用型号</font></strong></p></blockquote><blockquote><p><strong><font size="4">项目编译+烧录</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py build flash</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">项目编译+烧录并打开串口监视器</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py build flash monitor</span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于GitHub上传代码</title>
      <link href="/2023/12/04/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/"/>
      <url>/2023/12/04/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="建立GitHub的ssh密钥"><a href="#建立GitHub的ssh密钥" class="headerlink" title="建立GitHub的ssh密钥"></a>建立GitHub的ssh密钥</h1><h2 id="建立GitHub的ssh密钥-1"><a href="#建立GitHub的ssh密钥-1" class="headerlink" title="建立GitHub的ssh密钥"></a>建立GitHub的ssh密钥</h2><ul><li><strong><font size="4">找到 c盘-&gt;用户-&gt;你的账户-&gt;.shh 文件夹下的 id_rsa.pub文件</font></strong></li></ul><blockquote><p><strong><font size="4">先看一下C盘用户目录下有没有.ssh目录，有的话看下里面有没有id_rsa和id_rsa.pub这两个文件，有就跳到下一步，</font></strong></p><blockquote><p><strong><font size="4">如果没有，就打开win键，输入git，回车，通过下面命令创建</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</span><br></pre></td></tr></table></figure><p><strong><font size="4">此时可以找到c盘-&gt;用户-&gt;你的账户-&gt;.shh文件夹被生成了</font></strong></p></blockquote></blockquote><p><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/1.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图一"></p><ul><li><strong><font size="4">复制里面的内容</font></strong><br><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/2.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图二"></li></ul><ul><li><strong><font size="4">找到GitHub账户下的setting</font></strong><br><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/3.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图三"></li></ul><ul><li><strong><font size="4">还有该页面下的SSH and GPG keys，点击New SSH key</font></strong><br><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/4.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图四"></li></ul><ul><li><strong><font size="4">粘贴刚才的复制内容,并点击Add SSH key</font></strong><br><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/5.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图五"></li></ul><ul><li><strong><font size="4">在此处创建新的仓库</font></strong><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/关于GitHub上传代码/6.png" class="lazyload placeholder" data-srcset="/picture/关于GitHub上传代码/6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图六" style="height:400px;"/></div><span class="image-caption">图六</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/关于GitHub上传代码/7.png" class="lazyload placeholder" data-srcset="/picture/关于GitHub上传代码/7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图七" style="height:400px;"/></div><span class="image-caption">图七</span></div>             </div></li></ul><ul><li><strong><font size="4">进入你创建好的仓库，并复制你的仓库地址</font></strong><br><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/8.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图八"></li></ul><ul><li><strong><font size="4">进入你的项目文件夹，右键并点击Git Bash Here</font></strong><br><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/9.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图八"></li></ul><h2 id="用到的代码"><a href="#用到的代码" class="headerlink" title="用到的代码"></a>用到的代码</h2><ul><li><strong><font size="4">在打开的黑框里输入</font></strong></li></ul><blockquote><p><strong><font size="4">初始化你的项目文件为git管理</font></strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></blockquote></blockquote><blockquote><p><strong><font size="4">如果是第一次提交的话，要先配置好你在git上的用户名和邮箱，输入命令</font></strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email&quot;邮箱&quot; </span><br><span class="line">git config --global user.name&quot;名字&quot; </span><br></pre></td></tr></table></figure></blockquote></blockquote><blockquote><p><strong><font size="4">1.git add . 此操作是把项目文件夹下面的文件都添加进来</font></strong><br><strong><font size="4">2.commit命令，-m后面输入的是本次提交的说明，可以输入任意内容</font></strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add . </span><br><span class="line">git commit -m &quot;first commit&quot;</span><br></pre></td></tr></table></figure></blockquote></blockquote><blockquote><p><strong><font size="4">添加你的仓库地址</font></strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 你的刚才复制的仓库地址</span><br></pre></td></tr></table></figure></blockquote></blockquote><blockquote><p><strong><font size="4">上传到GitHub仓库，如果新建的远程仓库是空的，就要加上-u这个参数代码</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">仓库里有了内容之后，再从本地上传时候上传到GitHub仓库，不需要加 -u 参数，且只需要输入以下内容</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p><strong><font size="4">如果想要强制覆盖仓库里的内容的话，可以加上-f参数</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure></blockquote></blockquote><h2 id="完"><a href="#完" class="headerlink" title="完"></a>完</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 关于GitHub上传代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于QT的程序打包</title>
      <link href="/2023/12/04/QT/1%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/"/>
      <url>/2023/12/04/QT/1%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h1 id="QT的exe程序打包方式"><a href="#QT的exe程序打包方式" class="headerlink" title="QT的exe程序打包方式"></a>QT的exe程序打包方式</h1><h2 id="直接选择QT中的debug-release打包方式"><a href="#直接选择QT中的debug-release打包方式" class="headerlink" title="直接选择QT中的debug&#x2F;release打包方式"></a>直接选择QT中的debug&#x2F;release打包方式</h2><p><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/1.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图四"></p><blockquote><p><strong><font size="4">点击绿色三角直接打包生成下文件</font></strong></p></blockquote><ul><li><strong><font size="4">打包的文件会生成在如下图该文件目录下，可以自行修改</font></strong></li></ul><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/2.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图五" style="height:400px;"/></div><span class="image-caption">图五</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/3.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图六" style="height:400px;"/></div><span class="image-caption">图六</span></div>             </div><p><strong><font size="4">在该文件下的debug&#x2F;release文件夹（具体看打包方式）找到.exe文件，执行后且会提示缺少qt5xxxx.dll文件</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/4.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图七"></p><blockquote><p><strong><font size="4">解决方法有两种，配置环境变量和直接使用qt自带的cmd工具，填补所需的库</font></strong></p></blockquote><h2 id="一-配置环境变量来解决报错"><a href="#一-配置环境变量来解决报错" class="headerlink" title="一.配置环境变量来解决报错"></a>一.配置环境变量来解决报错</h2><ul><li><strong><font size="4">我选择的打包方式是 MinGW 64-bit 的,所以找到下图目录中的文件</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/5.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图八"><br><strong><font size="4">而报错的原因是因为缺少环境变量，这里可以在用户变量或者系统变量任选一个，点击PATH，添加环境变量</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/6.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图九"><blockquote><p><strong><font size="4">例如我的PATH中的变量名</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E:\QT\5.12.8\5.12.8\mingw73_64\bin </span><br></pre></td></tr></table></figure><br>       <p><strong><font size="4">点击完成后就可以正常打开.exe文件了</font></strong></p></blockquote></li></ul><h2 id="二-使用QT自带的cmd工具-不需要用户下载qt库"><a href="#二-使用QT自带的cmd工具-不需要用户下载qt库" class="headerlink" title="二.使用QT自带的cmd工具(不需要用户下载qt库)"></a>二.使用QT自带的cmd工具(不需要用户下载qt库)</h2><blockquote><p><strong><font size="4">在实际使用中，用户不可能使用别人的exe程序还要下载一个QT配置环境变量，所以需要用QT自带的cmd工具将所缺失的文件一起打包</font></strong></p><blockquote><p><strong><font size="4">可以将包含.exe文件的debug&#x2F;release的文件夹复制到其他位置</font></strong></p></blockquote></blockquote><ul><li><strong><font size="4">复制exe文件所在的路径，并按下win键，打开搜索栏搜索qt，打开MinGW 64-bit的版本</font></strong></li></ul><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/7.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十" style="height:400px;"/></div><span class="image-caption">图十</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/8.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十一" style="height:400px;"/></div><span class="image-caption">图十一</span></div>             </div><ul><li><strong><font size="4">输入windeployqt + exe文件所在的路径 + \应用名.exe</font></strong><blockquote><p><strong><font size="4">例如</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">windeployqt C:\Users\glass\Desktop\debug\myTcpClient.exe</span><br></pre></td></tr></table></figure></blockquote></li></ul><ul><li><strong><font size="4">运行成功</font></strong></li></ul><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/9.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十二" style="height:400px;"/></div><span class="image-caption">图十二</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/10.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十三" style="height:400px;"/></div><span class="image-caption">图十三</span></div>             </div><ul><li><strong><font size="4">再次点击.exe程序正常运行</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/11.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/11.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十四"></li></ul><h1 id="关于QT-for-Android的打包方法"><a href="#关于QT-for-Android的打包方法" class="headerlink" title="关于QT for Android的打包方法"></a>关于QT for Android的打包方法</h1><h2 id="Android打包"><a href="#Android打包" class="headerlink" title="Android打包"></a>Android打包</h2><blockquote><p><strong><font size="4">需要先配置QT for Android环境，见我的下一篇博客，关于QT与QT for Android的安装(二)</font></strong></p></blockquote><ul><li><strong><font size="4">首先选择开发模式，点击绿色三角，开始编译</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/12.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/12.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十五"></li></ul><ul><li><strong><font size="4">出现No Device Found不用害怕，关闭继续点击绿色三角</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/13.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/13.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十六"></li></ul><ul><li><strong><font size="4">编译完成，在图十八看到文件输出路径</font></strong><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/14.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/14.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十七" style="height:400px;"/></div><span class="image-caption">图十七</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/15.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/15.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十八" style="height:400px;"/></div><span class="image-caption">图十八</span></div>             </div></li></ul><blockquote><p><strong><font size="4">找到生成的文件，打包的apk在生成的文件夹\android-build\build\outputs\apk\debug</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/16.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/16.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十九"></p></blockquote><h2 id="完"><a href="#完" class="headerlink" title="完"></a>完</h2>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于QT的一些备忘录</title>
      <link href="/2023/12/01/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/QT%E5%A4%87%E5%BF%98%E5%BD%95/"/>
      <url>/2023/12/01/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/QT%E5%A4%87%E5%BF%98%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="槽函数"><a href="#槽函数" class="headerlink" title="槽函数"></a>槽函数</h1><ul><li><strong><font size="4">槽函数的创建</font></strong></li></ul><p><img src="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/%E6%A7%BD%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%9B%E5%BB%BA.png" class="lazyload placeholder" data-srcset="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/%E6%A7%BD%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%9B%E5%BB%BA.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="槽函数的创建"></p><ul><li><strong><font size="4">修改UI文件名称，需要修改.ui内的对象名称</font></strong><br><img src="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/%E4%BF%AE%E6%94%B9UI%E7%9A%84%E5%90%8D%E7%A7%B0.png" class="lazyload placeholder" data-srcset="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/%E4%BF%AE%E6%94%B9UI%E7%9A%84%E5%90%8D%E7%A7%B0.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="修改对象名称"></li></ul><ul><li><strong><font size="4">修改UI窗体名称</font></strong><br><img src="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/UI%E7%AA%97%E5%8F%A3%E5%90%8D%E7%A7%B0%E7%9A%84%E4%BF%AE%E6%94%B9.png" class="lazyload placeholder" data-srcset="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/UI%E7%AA%97%E5%8F%A3%E5%90%8D%E7%A7%B0%E7%9A%84%E4%BF%AE%E6%94%B9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="修改UI窗体名称"></li></ul><ul><li><strong><font size="4">关于unknow type name……报错，取消ClangCodeModel即可消失，但无法解决</font></strong><br><br></li></ul><ul><li><strong><font size="4">使用graphicsView组件为Qchart时,需要提升为QChartView</font></strong></li></ul><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/备忘录/QT/QT备忘录/使用graphicsView组件为Qchart时,需要提升为QChartView1.png" class="lazyload placeholder" data-srcset="/picture/备忘录/QT/QT备忘录/使用graphicsView组件为Qchart时,需要提升为QChartView1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" style="height:400px;"/></div></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/备忘录/QT/QT备忘录/使用graphicsView组件为Qchart时,需要提升为QChartView2.png" class="lazyload placeholder" data-srcset="/picture/备忘录/QT/QT备忘录/使用graphicsView组件为Qchart时,需要提升为QChartView2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" style="height:400px;"/></div></div>             </div>]]></content>
      
      
      
        <tags>
            
            <tag> 给自己看的备忘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于QT与QT for Android的安装（二）</title>
      <link href="/2023/11/23/QT/1%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/11/23/QT/1%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="QT-for-Android相关资料官方-镜像的下载地址"><a href="#QT-for-Android相关资料官方-镜像的下载地址" class="headerlink" title="QT for Android相关资料官方&#x2F;镜像的下载地址"></a>QT for Android相关资料官方&#x2F;镜像的下载地址</h1><h2 id="官网下载地址"><a href="#官网下载地址" class="headerlink" title="官网下载地址"></a>官网下载地址</h2><ul><li>JAVA1.8：<a href="https://www.oracle.com/java/technologies/downloads/#java8-windows">https://www.oracle.com/java/technologies/downloads/#java8-windows</a></li></ul><ul><li>Android NDK：<a href="https://github.com/android/ndk/wiki/Unsupported-Downloads">https://github.com/android/ndk/wiki/Unsupported-Downloads</a></li></ul><ul><li>Android SDK：<a href="https://www.androiddevtools.cn/">https://www.androiddevtools.cn/</a><blockquote><p>目前官网上已经没有单独的SDK下载安装包了。谷歌官网推荐的是下载包含有Android SDK的Android Studio，由于这个Android Studio 的安装包过大，且我们只需要使用SDK工具而已，推荐去上述的第三方网站下载Android SDK。</p></blockquote></li></ul><p><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/23.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/23.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="SDK下载位置"></p><h2 id="百度网盘下载地址"><a href="#百度网盘下载地址" class="headerlink" title="百度网盘下载地址"></a>百度网盘下载地址</h2><ul><li><strong>包含：QT5.12.8开源长期维护版本,在线下载器6.4.1,安卓SDK&#x2F;NDK和JAVA SDK</strong></li><li>链接：<a href="https://pan.baidu.com/s/1Jo4G82WE-E6BGU2oc7Ql7g?pwd=1234">https://pan.baidu.com/s/1Jo4G82WE-E6BGU2oc7Ql7g?pwd=1234</a> </li><li>提取码：1234</li></ul><h1 id="安装Android-SDK"><a href="#安装Android-SDK" class="headerlink" title="安装Android SDK"></a>安装Android SDK</h1><h2 id="SDK"><a href="#SDK" class="headerlink" title="SDK"></a>SDK</h2><ul><li><strong><font size="4">新建一个Android文件夹</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/4.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图一"></li></ul><ul><li><strong><font size="4">将android-sdk_r24.4.1-windows.zip压缩包解压到android文件夹下，进入文件夹点击SDK Manager.exe文件</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/5.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图二"></li></ul><ul><li><strong><font size="4">配置安装信息后，可以按照自己的需求，点击install</font></strong><div class="gallery stretch" col='1'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/6.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图三" style="height:280px;"/></div><span class="image-caption">图三</span></div>             </div></li></ul><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/7.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图四" style="height:550px;"/></div><span class="image-caption">图四</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/8.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图五" style="height:300px;"/></div><span class="image-caption">图五</span></div>             </div><ul><li><strong><font size="4">在界面内先点击accept（箭头1）,再点击箭头2，再次点击accept，重复直至所有协议均accept，点击install进行安装</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/9.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图六"></li></ul><ul><li><strong><font size="4">等待安装完成，退出</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/10.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图七"></li></ul><h1 id="安装JAVA-SDK"><a href="#安装JAVA-SDK" class="headerlink" title="安装JAVA SDK"></a>安装JAVA SDK</h1><h2 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h2><ul><li><strong><font size="4">点击JAVA SDK安装包</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/11.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/11.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图八"></li></ul><ul><li><strong><font size="4">一路next直至图九，修改安装路径（图十），点击ok安装</font></strong><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/12.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/12.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图九" style="height:400px;"/></div><span class="image-caption">图九</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/13.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/13.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十" style="height:400px;"/></div><span class="image-caption">图十</span></div>             </div></li></ul><ul><li><strong><font size="4">弹出图十一，点击箭头一，更改安装路径，找到图十的安装路径，新建一个文件夹，自定义名称，在这里我命名为JDK（箭头二），点击ok，并安装</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/14.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/14.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十一"><blockquote><p>注意在该步骤下经常会出现error code 1603，可以在控制面版卸载不需要的JAVA版本，然后重启电脑就可以正常安装了</p></blockquote></li></ul><ul><li><strong><font size="4">安装完毕</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/15.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/15.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十二"></li></ul><ul><li><strong><font size="4">配置环境变量，增添JAVA_HOME、CLASSPATH变量与PATH路径</font></strong></li></ul><blockquote><p>进入环境变量配置界面</p></blockquote><div class="gallery stretch" col='1'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/16.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/16.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十三" style="height:400px;"/></div><span class="image-caption">图十三</span></div>             </div><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/17.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/17.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十四" style="height:400px;"/></div><span class="image-caption">图十四</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/18.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/18.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十五" style="height:400px;"/></div><span class="image-caption">图十五</span></div>             </div><table><thead><tr><th align="left">变量名</th><th align="left">变量值</th></tr></thead><tbody><tr><td align="left">JAVA_HOME</td><td align="left">你的安装目录</td></tr><tr><td align="left">CLASSPATH</td><td align="left">.;%JAVA_HOME%\lib%JAVA_HOME%\lib\tools.jar</td></tr></tbody></table><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/19.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/19.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十四" style="height:400px;"/></div><span class="image-caption">图十四</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/20.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/20.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十五" style="height:400px;"/></div><span class="image-caption">图十五</span></div>             </div><blockquote><p><strong><font size="4">PATH中的变量名</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%JAVA_HOME%\bin</span><br></pre></td></tr></table></figure></blockquote><h1 id="有关Android-NDK"><a href="#有关Android-NDK" class="headerlink" title="有关Android NDK"></a>有关Android NDK</h1><h2 id="NDK解压至Android文件夹下，待用"><a href="#NDK解压至Android文件夹下，待用" class="headerlink" title="NDK解压至Android文件夹下，待用"></a>NDK解压至Android文件夹下，待用</h2><blockquote><p><strong><font size="4">注意NDK版本不能过高，这里我选择了android-ndk-r20b版本，也试过android-ndk-r26b版本，结果qt内部提示错误</font></strong></p></blockquote><h1 id="QT内部配置"><a href="#QT内部配置" class="headerlink" title="QT内部配置"></a>QT内部配置</h1><ul><li><strong><font size="4">打开qtcrator,选择选项</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/21.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/21.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十六"></li></ul><ul><li><strong><font size="4">将三个路径一一对应，即可完成qt for Android的配置</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/22.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/22.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十七"></li></ul><h2 id="QT配置篇，完"><a href="#QT配置篇，完" class="headerlink" title="QT配置篇，完"></a>QT配置篇，完</h2>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于QT与QT for Android的安装（一）</title>
      <link href="/2023/11/22/QT/1%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/11/22/QT/1%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="QT官方-镜像的下载地址"><a href="#QT官方-镜像的下载地址" class="headerlink" title="QT官方&#x2F;镜像的下载地址"></a>QT官方&#x2F;镜像的下载地址</h1><h2 id="官网下载地址-下载速度非常慢，需要魔法"><a href="#官网下载地址-下载速度非常慢，需要魔法" class="headerlink" title="官网下载地址(下载速度非常慢，需要魔法)"></a>官网下载地址(下载速度非常慢，需要魔法)</h2><ul><li>官网:<a href="https://download.qt.io/">https://download.qt.io/</a></li></ul><h2 id="国内镜像下载地址"><a href="#国内镜像下载地址" class="headerlink" title="国内镜像下载地址"></a>国内镜像下载地址</h2><ul><li>中国科学技术大学：<a href="http://mirrors.ustc.edu.cn/qtproject/">http://mirrors.ustc.edu.cn/qtproject/</a></li></ul><ul><li>清华大学：<a href="https://mirrors.tuna.tsinghua.edu.cn/qt/">https://mirrors.tuna.tsinghua.edu.cn/qt/</a></li></ul><ul><li>北京理工大学：<a href="http://mirror.bit.edu.cn/qtproject/">http://mirror.bit.edu.cn/qtproject/</a></li></ul><ul><li>中国互联网络信息中心：<a href="https://mirrors.cnnic.cn/qt/">https://mirrors.cnnic.cn/qt/</a></li></ul><blockquote><p><strong>注意:QT在5.12以后的版本,都为线上安装版本，不再提供离线安装包</strong><br><strong>该页面的archive&#x2F;qt&#x2F;5.12以下的任意版本，均有离线安装包，推荐5.12.8版本，打开文件下的.exe文件即可下载离线安装包</strong></p></blockquote><blockquote><p><strong>在线下载器版本是该页面的archive&#x2F;online_installers&#x2F;下的任意文件夹，点击文件夹下的.exe文件即可下载，且在线下载器可以下载QT6</strong><br><strong>但是听说QT6开源许可和QT5相比貌似有些不同，不知道对于商用有什么影响，所以我选择使用5.12.8开源版本()</strong></p></blockquote><h2 id="百度网盘下载地址"><a href="#百度网盘下载地址" class="headerlink" title="百度网盘下载地址"></a>百度网盘下载地址</h2><ul><li><strong>包含：QT5.12.8 linux源码，QT5.12.8开源长期维护版本,在线下载器6.4.1,安卓SDK&#x2F;NDK和JAVA SDK</strong></li><li>链接：<a href="https://pan.baidu.com/s/1Jo4G82WE-E6BGU2oc7Ql7g?pwd=1234">https://pan.baidu.com/s/1Jo4G82WE-E6BGU2oc7Ql7g?pwd=1234</a> </li><li>提取码：1234</li></ul><h1 id="QT5-12-8与QT-for-android环境配置安装"><a href="#QT5-12-8与QT-for-android环境配置安装" class="headerlink" title="QT5.12.8与QT for android环境配置安装"></a>QT5.12.8与QT for android环境配置安装</h1><h2 id="QT5-12-8安装"><a href="#QT5-12-8安装" class="headerlink" title="QT5.12.8安装"></a>QT5.12.8安装</h2><ul><li><strong><font size="4">下载qt-opensource-windows-x86-5.12.8.exe，点击后一直next，直到遇见&lt;图一&gt;。</font></strong></li><li><strong><font size="4">新用户需要勾选方框内的accept，再对箭头所指的sign up进行注册，验证。</font></strong><!-- ![图一](/picture/QT/1/1.png#pic_left) --></li></ul><p><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%B8%80)/1.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%B8%80)/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图一"></p><ul><li><strong><font size="4">选择安装路径&lt;图二&gt;</font></strong></li></ul><p><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%B8%80)/2.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%B8%80)/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图二"></p><ul><li><strong><font size="4">一直点击下一步，遇见&lt;图三&gt;，勾选图内所需组件后，继续点击下一步</font></strong></li></ul><p><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%B8%80)/3.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%B8%80)/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图三"></p><ul><li><strong><font size="4">等待安装完成后,取消launch</strong></font>__<br><strong><font size="4">你可以在windows开始菜单上找到4个打开快捷方式，而缺少qtcreator快捷方式</font></strong></li><li><strong><font size="4">该应用可以在<span class='p warning'>QT安装文件夹\Tools\QtCreator\bin\</span>文件夹下找到<span class='p warning'>qtcreator.exe</span></font></strong></li></ul><h2 id="环境配置篇待续"><a href="#环境配置篇待续" class="headerlink" title="环境配置篇待续"></a>环境配置篇待续</h2>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用指令</title>
      <link href="/2023/11/22/hexo%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
      <url>/2023/11/22/hexo%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo常用指令"><a href="#hexo常用指令" class="headerlink" title="hexo常用指令"></a>hexo常用指令</h1><blockquote><p><strong>方便管理_post文件，为_post文件添加子文件</strong>__</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post -p /QT/&quot;关于QT与QT for android的安装.md&quot;</span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 给自己看的备忘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破站感言</title>
      <link href="/2023/09/09/hello-world/"/>
      <url>/2023/09/09/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="关于破站感言"><a href="#关于破站感言" class="headerlink" title="关于破站感言"></a>关于破站感言</h1><blockquote><p><font size="4"><strong>总之,这是第一次建立了属于自己的博客,感觉心里倍感骄傲hh,之后我会把如何在linux和windows上使用hexo建站的感悟都分享给大家</strong></font><br><br><font size="4"><strong>还有是打算把自己以前学过的知识分享出来，同时这个博客也可以给自己当做一个备忘录ww</strong></font><br><br><font size="4"><strong>接下来我打算做一个有关于智能车的无线图传，并把它开源出来供大家使用</strong></font></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 破站感言 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
